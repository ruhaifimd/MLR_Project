library(tidyverse)
library(broom)
library(readr)
library(gtsummary)
library(corrplot)
library(caret)
library(mfp)
library(ggplot2)
library(generalhoslem)
library(ResourceSelection)
library(dagitty)
library(DescTools)
library(dplyr)
library(knitr)
library(sjPlot)
# Load the dagitty package
library(dagitty)
# Define the DAG
DAG <- dagitty ('dag {
chest pain [pos="0.065,0.288"]
chol [pos="0.147,0.192"]
angina [pos="0.150,0.667"]
BP [pos="0.639,0.179"]
ECG [pos="0.490,0.685"]
CHD [pos="0.367,0.330"]
age [pos="0.210,0.039"]
gender [pos="0.461,0.033"]
chest pain -> angina
chest pain -> ECG
chest pain -> CHD
chol -> CHD
angina -> CHD
BP -> resting ECG
BP -> CHD
ECG -> CHD
age -> chol
age -> BP
age -> CHD
gender -> chol
gender -> BP
gender -> CHD
}')
# Visualize the DAG
plot(DAG)
library(readxl)
CHD <- read_excel("heart.xlsx")
library(dplyr)
glimpse(CHD)
library(haven)
CHD<-
CHD %>%
mutate(across(where(is.character), as_factor))
summary(CHD)
ggplot(CHD, aes(x = age, fill = factor(CHD))) +
geom_histogram(bins = 30, alpha = 0.7, position = "identity") +
facet_wrap(~ CHD) +
labs(title = "Age Distribution by CHD Status",
x = "Age",
y = "Count",
fill = "CHD Status") +
theme_minimal()
ggplot(CHD, aes(x = blood_pressure, fill = factor(CHD))) +
geom_histogram(bins = 30, alpha = 0.7, position = "identity") +
facet_wrap(~ CHD) +
labs(title = "Resting Blood Pressure Distribution by CHD Status",
x = "Resting Blood Pressure",
y = "Count",
fill = "CHD Status") +
theme_minimal()
ggplot(CHD, aes(x = chol, fill = factor(CHD))) +
geom_histogram(bins = 30, alpha = 0.7, position = "identity") +
facet_wrap(~ CHD) +
labs(title = "Resting Blood Pressure Distribution by CHD Status",
x = "Cholesterol level",
y = "Count",
fill = "CHD Status") +
theme_minimal()
ggplot(CHD, aes(x = gender, fill  = CHD)) +
geom_bar(position = "dodge", alpha = 0.8) +
facet_wrap(~ factor(CHD), nrow = 1) +
labs(title = "Gender Distribution by CHD Status",
x = "Gender",
y = "Count",
fill = "CHD Status") +
theme_minimal()
ggplot(CHD, aes(x = chest_pain_type, fill  = CHD)) +
geom_bar(position = "dodge", alpha = 0.8) +
facet_wrap(~ factor(CHD), nrow = 5) +
labs(title = "Chest pain type Distribution by CHD Status",
x = "Chest Pain Type",
y = "Count",
fill = "CHD Status") +
theme_minimal()
ggplot(CHD, aes(x = resting_ecg, fill  = CHD)) +
geom_bar(position = "dodge", alpha = 0.8) +
facet_wrap(~ factor(CHD), nrow = 2) +
labs(title = "Resting ECG Distribution by CHD Status",
x = "Resting ECG",
y = "Count",
fill = "CHD Status") +
theme_minimal()
ggplot(CHD, aes(x = exercise_induced_angina, fill  = CHD)) +
geom_bar(position = "dodge", alpha = 0.8) +
facet_wrap(~ factor(CHD), nrow = 1) +
labs(title = "Exercise-induced angina Distribution by CHD Status",
x = "Exercise-induced Angina",
y = "Count",
fill = "CHD Status") +
theme_minimal()
library(tidyverse)
library(broom)
library(readr)
library(gtsummary)
library(corrplot)
library(caret)
library(mfp)
library(ggplot2)
library(generalhoslem)
library(ResourceSelection)
library(dagitty)
library(DescTools)
library(dplyr)
library(knitr)
library(sjPlot)
library(performance)
# Load the dagitty package
library(dagitty)
# Define the DAG
DAG <- dagitty ('dag {
chest pain [pos="0.065,0.288"]
chol [pos="0.147,0.192"]
angina [pos="0.150,0.667"]
BP [pos="0.639,0.179"]
ECG [pos="0.490,0.685"]
CHD [pos="0.367,0.330"]
age [pos="0.210,0.039"]
gender [pos="0.461,0.033"]
chest pain -> angina
chest pain -> ECG
chest pain -> CHD
chol -> CHD
angina -> CHD
BP -> resting ECG
BP -> CHD
ECG -> CHD
age -> chol
age -> BP
age -> CHD
gender -> chol
gender -> BP
gender -> CHD
}')
# Visualize the DAG
plot(DAG)
library(readxl)
CHD <- read_excel("heart.xlsx")
library(dplyr)
glimpse(CHD)
library(haven)
CHD<-
CHD %>%
mutate(across(where(is.character), as_factor))
summary(CHD)
ggplot(CHD, aes(x = age, fill = factor(CHD))) +
geom_histogram(bins = 30, alpha = 0.7, position = "identity") +
facet_wrap(~ CHD) +
labs(title = "Age Distribution by CHD Status",
x = "Age",
y = "Count",
fill = "CHD Status") +
theme_minimal()
ggplot(CHD, aes(x = blood_pressure, fill = factor(CHD))) +
geom_histogram(bins = 30, alpha = 0.7, position = "identity") +
facet_wrap(~ CHD) +
labs(title = "Resting Blood Pressure Distribution by CHD Status",
x = "Resting Blood Pressure",
y = "Count",
fill = "CHD Status") +
theme_minimal()
ggplot(CHD, aes(x = chol, fill = factor(CHD))) +
geom_histogram(bins = 30, alpha = 0.7, position = "identity") +
facet_wrap(~ CHD) +
labs(title = "Resting Blood Pressure Distribution by CHD Status",
x = "Cholesterol level",
y = "Count",
fill = "CHD Status") +
theme_minimal()
ggplot(CHD, aes(x = gender, fill  = CHD)) +
geom_bar(position = "dodge", alpha = 0.8) +
facet_wrap(~ factor(CHD), nrow = 1) +
labs(title = "Gender Distribution by CHD Status",
x = "Gender",
y = "Count",
fill = "CHD Status") +
theme_minimal()
ggplot(CHD, aes(x = chest_pain_type, fill  = CHD)) +
geom_bar(position = "dodge", alpha = 0.8) +
facet_wrap(~ factor(CHD), nrow = 5) +
labs(title = "Chest pain type Distribution by CHD Status",
x = "Chest Pain Type",
y = "Count",
fill = "CHD Status") +
theme_minimal()
ggplot(CHD, aes(x = resting_ecg, fill  = CHD)) +
geom_bar(position = "dodge", alpha = 0.8) +
facet_wrap(~ factor(CHD), nrow = 2) +
labs(title = "Resting ECG Distribution by CHD Status",
x = "Resting ECG",
y = "Count",
fill = "CHD Status") +
theme_minimal()
ggplot(CHD, aes(x = exercise_induced_angina, fill  = CHD)) +
geom_bar(position = "dodge", alpha = 0.8) +
facet_wrap(~ factor(CHD), nrow = 1) +
labs(title = "Exercise-induced angina Distribution by CHD Status",
x = "Exercise-induced Angina",
y = "Count",
fill = "CHD Status") +
theme_minimal()
SLR.age <- glm(CHD ~ age,
data = CHD,
family = binomial)
tab_model(SLR.age)
SLR.gender <- glm(CHD ~ gender,
data = CHD,
family = binomial)
tab_model(SLR.gender)
SLR.chest_pain <- glm(CHD ~ chest_pain_type,
data = CHD,
family = binomial)
tab_model(SLR.chest_pain)
SLR.bp <- glm(CHD ~ blood_pressure,
data = CHD,
family = binomial)
tab_model(SLR.bp)
SLR.chol <- glm(CHD ~ chol,
data = CHD,
family = binomial)
tab_model(SLR.chol)
SLR.ecg <- glm(CHD ~ resting_ecg,
data = CHD,
family = binomial)
tab_model(SLR.ecg)
SLR.angina <- glm(CHD ~ exercise_induced_angina,
data = CHD,
family = binomial)
tab_model(SLR.angina)
#create a summary table for each model with confidence intervals
tbl_age <- tbl_regression(SLR.age, exponentiate = TRUE, conf.level = 0.95)
tbl_gender <- tbl_regression(SLR.gender, exponentiate = TRUE, conf.level = 0.95)
tbl_chest_pain <- tbl_regression(SLR.chest_pain, exponentiate = TRUE, conf.level = 0.95)
tbl_bp <- tbl_regression(SLR.bp, exponentiate = TRUE, conf.level = 0.95)
tbl_chol <- tbl_regression(SLR.chol, exponentiate = TRUE, conf.level = 0.95)
tbl_ecg <- tbl_regression(SLR.ecg, exponentiate = TRUE, conf.level = 0.95)
tbl_angina <- tbl_regression(SLR.angina, exponentiate = TRUE, conf.level = 0.95)
#Combine all tables into one
SLR_table <- tbl_stack(
list(tbl_age, tbl_gender, tbl_chest_pain, tbl_bp, tbl_chol, tbl_ecg, tbl_angina)
) %>%
as_gt() %>%
gt::tab_header(
title = "Simple Logistic Regression Model"
)
#Print the summary table
SLR_table
MLR_modA <- glm(CHD ~ age + gender + chest_pain_type + blood_pressure + chol + resting_ecg + exercise_induced_angina ,
family = binomial,
data = CHD)
tab_model(MLR_modA)
MLR_modB <- glm(CHD ~ age + gender + chest_pain_type + blood_pressure + chol + resting_ecg + exercise_induced_angina + age:gender ,
family = binomial,
data = CHD)
tab_model(MLR_modB)
# Perform the Likelihood Ratio Test and save the result to 'lr_test'
lr_test <- anova(MLR_modA, MLR_modB, test = "Chisq")
# Print the result of the Likelihood Ratio Test
lr_test
library(car)
# Calculate VIF values for the final model
MLR_final <- MLR_modA
vif_MLR_final <- vif(MLR_final)
print(vif_MLR_final)
library(randomForest)
rf <- randomForest(CHD ~ age + gender + chest_pain_type + blood_pressure + chol + resting_ecg + exercise_induced_angina,
data = CHD)
library(vip)
vip(rf)
